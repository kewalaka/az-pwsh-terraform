name: Docker PR Build and Scan

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  packages: write

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # ──────────────────────────────────────────────────────────────
      # build container and push to GitHub Container Registry
      # ──────────────────────────────────────────────────────────────
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image to GHCR
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.sha }}
            ghcr.io/${{ github.repository }}:pr-${{ github.event.pull_request.number }}
          sbom: true
          provenance: false

      # ──────────────────────────────────────────────────────────────
      # scan Docker image with Trivy and post results to PR
      # ──────────────────────────────────────────────────────────────
      - name: Scan Docker image with Trivy and generate summary
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: 'ghcr.io/${{ github.repository }}:${{ github.sha }}'
          format: 'table'
          output: 'trivy-results.txt'
          severity: 'CRITICAL,HIGH,MEDIUM'

      - name: Post Trivy scan results to PR
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const fullResults = fs.readFileSync('trivy-results.txt', 'utf8');
            
            let summarySection = '';
            const summaryMatch = fullResults.match(/Report Summary\n\n(.*?)\nLegend:/s);
            
            if (summaryMatch && summaryMatch[1]) {
              summarySection = summaryMatch[1].trim();
            } else {
              summarySection = "No vulnerability summary found. Please check the full report in the Actions tab.";
            }
            
            const header = '## Trivy Security Scan Summary\n\n';
            const footer = `\n\n---\n\n*For detailed results, please [view the actions output](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${process.env.GITHUB_RUN_ID}).*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: header + '```\n' + summarySection + '\n```' + footer
            });

      # ──────────────────────────────────────────────────────────────
      # publish Trivy results to action log
      # ──────────────────────────────────────────────────────────────
      - name: Publish Trivy to action log
        run: |
          if [[ -s trivy-results.txt ]]; then
            {
              echo "### Trivy Scan Results"
              echo "<details><summary>Click to expand</summary>"
              echo ""
              echo '```terraform'
              cat trivy-results.txt
              echo '```'
              echo "</details>"
            } >> $GITHUB_STEP_SUMMARY
          fi

      # ──────────────────────────────────────────────────────────────
      # clean up old images
      # ──────────────────────────────────────────────────────────────
      # - name: Clean up old images
      #   uses: ./.github/actions/ghcr-cleanup-action
      #   with:
      #     mode: 'pr'
      #     include-untagged: 'true'
      #     token: ${{ github.token }}